% \iffalse
%% File: xr.dtx Copyright (C) 1993-1994 David Carlisle
%
%<package>\NeedsTeXFormat{LaTeX2e}
%<package>\ProvidesPackage{xr}
%<package>         [1994/05/28 v5.02 eXternal References (DPC)]
%
%<*driver>
\documentclass{ltxdoc}
%\usepackage[french]{babel}
\usepackage[latin1]{inputenc}

\usepackage{xr}
\GetFileInfo{xr.sty}
\begin{document}
\title{Le package \textsf{xr}\thanks{Cette version
        a comme numéro \fileversion, dernière
        revision \filedate.}}
\author{David Carlisle\thanks{L'auteur des versions 1 à 4 est
Jean-Pierre Drucbert (Jean-Pierre.Drucbert@onecert.fr)}\\
(traduction française: Jean-Pierre Drucbert\\
Jean-Pierre.Drucbert@onecert.fr)}
\date{\filedate}
\maketitle
\DocInput{f-xr.dtx}
\end{document}
%</driver>
% \fi
%
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% \CheckSum{87}
%
% \changes{v5.00}{1993/07/07}
%         {First DPC version (by agreement with J-PD).  New mechanism
%         (\cmd{\read} instead of \cmd\input).}
%
% \changes{v5.01}{1993/07/20}{Fix bug added by DPC, v5.00 did not import
%           aux files of \cmd\include'ed files. (Reported by J-PD)}
%
% \changes{v5.02}{1994/05/28}{Update for LaTeX2e}
%
%
% Ce package permet de gérer des Références eXternes
%
% Si un document se référe à certaines sections d'un autre, par exemple
% |aaa.tex|, alors charger ce package dans le fichier principal et 
% placer la commande\\
% |\externaldocument{aaa}|\\
% dans le préambule.
%
% Vous pouvez alors utiliser |\ref| et |\pageref| pour vous référer à
% tout ce qui a été défini par |\label| dans chaque |aaa.tex| ou dans
% le document principal.
% Il est possible de déclarer autant de documents externes que l'on 
% veut.
%
% Si l'un des documents externes ou le document principal utilise le 
% m\^eme \verb|\label|, cette étiquette (label) étant définie plusieurs
% fois, une erreur survient. Afin de contourner ce problème, la commande
% \verb|\externaldocument| a un argument optionnel. Si vous déclarez
% \begin{quote}
% \verb|\externaldocument[A-]{aaa}|
% \end{quote}
% alors toutes les r\'ef\'erences dans le document {\tt aaa} sont
% pr\'efix\'ees par {\tt A-}. Par exemple, si une section de {\tt aaa}
% contient \verb|\label{intro}|, alors ce label pourra \^etre
% r\'ef\'erenc\'e par \verb|\ref{A-intro}|. Le pr\'efixe peut \^etre 
% diff\'erent de {\tt A-}; il peut \^etre toute cha\^{\i}ne choisie
% pour que tous les étiquettes import\'ees depuis des fichiers externes
% soient uniques. Notez cependant que si vos packages d\'eclarent
% certains caract\`eres actifs (|:| en fran\c{c}ais, |"| en allemand,
% alors ils ne peuvent pas en g\'en\'eral \^etre utilis\'es dans
% l'argument de \verb|\label|  ni dans l'argument optionnel de 
% \verb|\externaldocument|.

%
% \StopEventually{}
%
% \section{Les macros (section non traduite)}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% Check for the optional argument.
%    \begin{macrocode}
\def\externaldocument{\@ifnextchar[\XR@{\XR@[]}}
%    \end{macrocode}
%
% Save the optional prefix. Start processing the first |aux| file.
%    \begin{macrocode}
\def\XR@[#1]#2{{%
  \makeatletter
  \def\XR@prefix{#1}%
  \XR@next#2.aux\relax\\}}
%    \end{macrocode}
%
% Process the next |aux| file in the list and remove it from the head of
% the list of files to process.
%    \begin{macrocode}
\def\XR@next#1\relax#2\\{%
  \edef\XR@list{#2}%
  \XR@loop{#1}}
%    \end{macrocode}
%
% Check whether the list of |aux| files is empty.
%    \begin{macrocode}
\def\XR@aux{%
  \ifx\XR@list\@empty\else\expandafter\XR@explist\fi}
%    \end{macrocode}
%

% Expand the list of aux files, and call |\XR@next| to process the first
% one.
%    \begin{macrocode}
\def\XR@explist{\expandafter\XR@next\XR@list\\}
%    \end{macrocode}
%
% If the |aux| file exists, loop through line by line, looking for
% |\newlabel| and |\@input|. Otherwise process the next file in the
% list.
%    \begin{macrocode}
\def\XR@loop#1{\openin\@inputcheck#1\relax
  \ifeof\@inputcheck
    \PackageWarning{xr}{^^JNo file #1^^JLABELS NOT IMPORTED.^^J}%
    \expandafter\XR@aux
  \else
    \PackageInfo{xr}{IMPORTING LABELS FROM #1}%
    \expandafter\XR@read\fi}
%    \end{macrocode}
%
% Read the next line of the aux file.
%    \begin{macrocode}
\def\XR@read{%
  \read\@inputcheck to\XR@line
%    \end{macrocode}
% The |...| make sure that |\XR@test| always has sufficient arguments.
%    \begin{macrocode}
  \expandafter\XR@test\XR@line...\XR@}
%    \end{macrocode}
%
% Look at the first token of the line.
% If it is |\newlabel|, do the |\newlabel|. If it is |\@input|, add the
% filename to the list of files to process. Otherwise ignore.
% Go around the loop if not at end of file. Finally process the next
% file in the list.
%    \begin{macrocode}
\long\def\XR@test#1#2#3#4\XR@{%
  \ifx#1\newlabel
    \newlabel{\XR@prefix#2}{#3}%
  \else\ifx#1\@input
     \edef\XR@list{\XR@list#2\relax}%
  \fi\fi
  \ifeof\@inputcheck\expandafter\XR@aux
  \else\expandafter\XR@read\fi}
%    \end{macrocode}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \Finale
%

