% \iffalse meta-comment
%
% Copyright 1993-2014
%
% The LaTeX3 Project and any individual authors listed elsewhere
% in this file.
%
% This file is part of the Standard LaTeX `Tools Bundle'.
% -------------------------------------------------------
%
% It may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3c
% of this license or (at your option) any later version.
% The latest version of this license is in
%    http://www.latex-project.org/lppl.txt
% and version 1.3c or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% The list of all files belonging to the LaTeX `Tools Bundle' is
% given in the file `manifest.txt'.
%
% \fi
% \iffalse
%% File: delarray.dtx Copyright (C) 1991-1994 David Carlisle
%
%<package>\NeedsTeXFormat{LaTeX2e}
%<package>\ProvidesPackage{delarray}
%<package>         [2014/10/28 v1.01 array delimiter package (DPC)]
%
%<*driver>
\documentclass{ltxdoc}
\usepackage[ltxdoc,inputenc,fontenc,babel]{translatex-fr}
\usepackage{delarray}
\GetFileInfo{delarray.sty}
\begin{document}
\title{The \textsf{delarray} package\thanks{This file
        has version number \fileversion, last
        revised \filedate.}}
\title{L'extension \texttt{delarray}\thanks{Ce fichier a pour numéro de
        version \fileversion\ et a été mis à jour le \filedatefr. La
        première traduction, basée la version v1.01, a été publiée par 
        Jean-Pierre Drucbert en 2000.}}
\author{David Carlisle}
\date{\filedatefr}
 \MaintainedByLaTeXTeam{tools}
 \maketitle
 \DocInput{delarray-fr.dtx}
\end{document}
%</driver>
% \fi
%
%
% \changes{v1.00}{1992/07/06}
%    {Initial version after merging of newarray.sty to array.sty}
%
% \changes{v1.01}{1994/03/14}
%    {Update to LaTeX2e}
%
%
% \section{Exemples}
%
%
% Cette extension ajoute à l'extension \texttt{array} un système de paires
% implicites |\left| |\right|. Si vous souhaitez obtenir un tableau entouré
% de parenthèses, vous pouvez alors saisir : \\
% |\begin{array}({cc})| \ldots
% \[  \begin{array}({cc})a&b\\c&d\end{array}   \]
%
% De la même manière, un environnement équivalent à |\cases| de \PlainTeX peut
% être défini avec :\\
% |\begin{array}\{{lL}.| \ldots
%
% \newcolumntype{L}{>{$}l<{$}}
% \[  f(x)=\begin{array}\{{lL}.
%           0        &si $x=0$\\
%           \sin(x)/x&sinon
%           \end{array}  \]
% Ici, |L| désigne une colonne de texte sinistroverse\footnote{N.D.T. : il 
% s'agit d'un mode où le texte est écrit de gauche à droite.} alignée à gauche.
% Il peut être défini comme suit : |\newcolumntype{L}{>{$}l<{$}}|, comme 
% expliqué dans \texttt{array.sty}. Notez que les délimiteurs doivent toujours
% être utilisés par paires, le \og |.| \fg{} doit être utilisé pour indiquer un
% \og délimiteur nul \fg{}.
%
% Ce dispositif est particulièrement utile si les arguments |[t]| ou |[b]| sont
% aussi utilisés. Dans ces cas le résultat n'est pas équivalent à celui obtenu
% en entourant l'environnement par |\left|\ldots|\right|, comme vous pouvez le
% voir dans les exemples suivants:
% \[
% \begin{array}[t]({c}) 1\\2\\3 \end{array}
% \begin{array}[c]({c}) 1\\2\\3 \end{array}
% \begin{array}[b]({c}) 1\\2\\3 \end{array}
% \quad\mbox{et non}\quad
% \left(\begin{array}[t]{c} 1\\2\\3 \end{array}\right)
% \left(\begin{array}[c]{c} 1\\2\\3 \end{array}\right)
% \left(\begin{array}[b]{c} 1\\2\\3 \end{array}\right)
% \]
% \begin{verbatim}
% \begin{array}[t]({c}) 1\\2\\3 \end{array}
% \begin{array}[c]({c}) 1\\2\\3 \end{array}
% \begin{array}[b]({c}) 1\\2\\3 \end{array}
% \quad\mbox{et non}\quad
% \left(\begin{array}[t]{c} 1\\2\\3 \end{array}\right)
% \left(\begin{array}[c]{c} 1\\2\\3 \end{array}\right)
% \left(\begin{array}[b]{c} 1\\2\\3 \end{array}\right)
% \end{verbatim}
%
%
% \StopEventually{}
%
% \section{Les commandes}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
%    \begin{macrocode}
\RequirePackage{array}[1994/02/03]
%    \end{macrocode}
%
% \begin{macro}{\@tabarray}
%    Cette commande teste la présence d'un crochet optionnel puis
%    appelle |\@@array| ou |\@@array[c]| (par défaut).
%    \begin{macrocode}
\def\@tabarray{\@ifnextchar[{\@@array}{\@@array[c]}}
%    \end{macrocode}
% \end{macro}
% \tradini
% \begin{macro}{\@@array}
%    This macro tests for an optional delimiter before the left brace
%    of the main preamble argument. If there is no delimiter,
%    |\@arrayleft| and |\@arrayright| are made a no-ops, and
%    |\@array| is called with the positional argument. Otherwise
%    call |\@del@array|.
%    \begin{macrocode}
\def\@@array[#1]{\@ifnextchar\bgroup
  {\let\@arrayleft\relax\let\@arrayright\relax\@array[#1]}%
  {\@del@array[#1]}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@del@array}
%    We now know that we have an {\tt array} (or {\tt tabular}) with
%    delimiters.
%    \begin{macrocode}
\def\@del@array[#1]#2#3#4{%
%    \end{macrocode}
% The following line is completely redundant but it does catch errors
% involving delimiters  before the processing of the alignment begins.
% A common error is likely to be omitting the `.' in a
% |\cases|-type construction. This causes the first token of the
% alignment to be gobbled, possibly causing lots of spurious errors
% before the cause of the error, the missing delimiter, is discovered as
% |\@arrayright| puts the alignment and the delimiters together.
%    \begin{macrocode}
  \setbox\z@\hbox{$\left#2\right#4$}%
%    \end{macrocode}
% In the case of a `c' argument we do not need to rebox the alignment,
% so we can define |\@arrayleft| and |\@arrayright| just to
% insert the delimiters.
%    \begin{macrocode}
  \if#1c\def\@arrayleft{\left#2}\def\@arrayright{\right#4}%
%    \end{macrocode}
% Otherwise we (should) have a {\tt[t]} or {\tt[b]} argument, so first we
% store the alignment, without delimiters in box0.
%    \begin{macrocode}
  \else\def\@arrayleft{\setbox\z@}%
%    \end{macrocode}
% Then after the alignment is finished:
%    \begin{macrocode}
  \def\@arrayright{%
%    \end{macrocode}
% Calculate the amount the box needs to be lowered (this will be
% negative in the case of |[b]|). A little bit of arithmetic cf.\
% the \TeX{}Book, Appendix G, rule 8. We calculate the amount this
% way, rather than just taking the difference between the depth of box0
% and the depth of the box defined below, as the depth of that box may
% be affected by the delimiters if |\delimitershortfall| or
% |\delimiterfactor| have non-standard values.
%    \begin{macrocode}
     \dimen@=\dp\z@
     \advance\dimen@-\ht\z@
     \divide \dimen@ by \tw@
     \advance\dimen@ by\fontdimen22 \textfont\tw@
%    \end{macrocode}
% Now lower the alignment and the delimiters into place.
%    \begin{macrocode}
     \lower\dimen@\hbox{$\left#2\vcenter{\unvbox\z@}\right#4$}}%
%    \end{macrocode}
% End the |\if#1c|
%    \begin{macrocode}
  \fi
%    \end{macrocode}
% Now that we have defined |\@arrayleft| and |\@arrayright|, call
% |\@array|.
%    \begin{macrocode}
  \@array[#1]{#3}}
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
%
% \subsection{newarray.sty}
% All the features of the old {\tt newarray} style option have been
% merged into the {\tt array} or {\tt delarray} options.
% \changes{v1.00}{1992/07/06}
%    {Stop generating a `shell' newarray.sty}
%
%
% \Finale
\endinput
