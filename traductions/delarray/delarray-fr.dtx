% \iffalse meta-comment
%
% Copyright (c) 1993-2016
% Le LaTeX3 Project et tout auteur listé dans ce fichier.
%
% Ce fichier est la traduction en français du fichier delarray.dtx
% -------------------------------------------------------------------
%
% Ce document appartient à la "boîte à outils" du LaTeX standard.
% 
% Il peut être distribué et/ou modifié sous les conditions définies par la
% LaTeX Project Public License, soit en version 1.3c, soit (à votre choix)
% en toute version ultérieure.
% La dernière version de cette licence est à l'adresse :
%   http://www.latex-project.org/lppl.txt
% et la version 1.3c et les suivantes se retrouvent dans toutes les
% distributions de LaTeX dès la version 2005/12/01.
%
% La liste de tous les fichiers appartenant à la "Boîte à outils" est donnée
% dans le fichier "manifest.txt".
%
% \fi
% \iffalse
%% File: delarray.dtx Copyright (C) 1991-1994 David Carlisle
%
%<package>\NeedsTeXFormat{LaTeX2e}
%<package>\ProvidesPackage{delarray}
%<package>         [2014/10/28 v1.01 array delimiter package (DPC)]
%
%<*driver>
\documentclass{ltxdoc}
\usepackage[ltxdoc,inputenc,fontenc,babel]{translatex-fr}
\usepackage{delarray}
\GetFileInfo{delarray.sty}
\usepackage[colorlinks=true]{hyperref}
\begin{document}
\title{L'extension \textsf{delarray}\thanks{Ce fichier a pour numéro de
        version \fileversion\ et a été mis à jour le \filedatefr. Son 
        titre original est \og \emph{The \textsf{delarray} package} \fg.
        La première traduction, basée la version v1.01, a été publiée par 
        Jean-Pierre Drucbert en 2000.}}
\author{David Carlisle}
\date{\filedatefr}
 \MaintainedByLaTeXTeam{tools}
 \maketitle
 \DocInput{delarray-fr.dtx}
\end{document}
%</driver>
% \fi
%
%
% \changes{v1.00}{1992/07/06}
%    {Version initiale après fusion de newarray.sty et de array.sty}
%
% \changes{v1.01}{1994/03/14}
%    {Mise à jour pour LaTeX2e}
%
%
% \section{Exemples}
%
%
% Cette extension ajoute à l'extension \textsf{array} un système de paires
% implicites |\left| |\right|. Si vous souhaitez obtenir un tableau entouré
% de parenthèses, vous pouvez alors saisir : \\
% |\begin{array}({cc})| \ldots
% \[  \begin{array}({cc})a&b\\c&d\end{array}   \]
%
% De la même manière, un environnement équivalent à |\cases| de \PlainTeX\ peut
% être défini avec :\\
% |\begin{array}\{{lL}.| \ldots
%
% \newcolumntype{L}{>{$}l<{$}}
% \[  f(x)=\begin{array}\{{lL}.
%           0        &si $x=0$\\
%           \sin(x)/x&sinon
%           \end{array}  \]
% Ici, |L| désigne une colonne de texte dextroverse\footnote{N.D.T. : le texte
% y est écrit de gauche à droite.} alignée à gauche, qui peut être définie 
% comme suit : |\newcolumntype{L}{>{$}l<{$}}|, comme expliqué dans l'extension
% \textsf{array}. Notez que les délimiteurs doivent toujours être utilisés par
% paires et que le \og |.| \fg doit être utilisé pour indiquer un  
% délimiteur \og nul \fg.
%
% Ce dispositif est particulièrement utile si les arguments |[t]| ou |[b]| sont
% aussi utilisés. Dans ce cas, le résultat n'est pas équivalent à celui obtenu
% en entourant l'environnement par |\left|\ldots|\right|, comme vous pouvez le
% voir dans les exemples suivants:
% \[
% \begin{array}[t]({c}) 1\\2\\3 \end{array}
% \begin{array}[c]({c}) 1\\2\\3 \end{array}
% \begin{array}[b]({c}) 1\\2\\3 \end{array}
% \quad\mbox{et non}\quad
% \left(\begin{array}[t]{c} 1\\2\\3 \end{array}\right)
% \left(\begin{array}[c]{c} 1\\2\\3 \end{array}\right)
% \left(\begin{array}[b]{c} 1\\2\\3 \end{array}\right)
% \]
% \begin{verbatim}
% \begin{array}[t]({c}) 1\\2\\3 \end{array}
% \begin{array}[c]({c}) 1\\2\\3 \end{array}
% \begin{array}[b]({c}) 1\\2\\3 \end{array}
% \quad\mbox{et non}\quad
% \left(\begin{array}[t]{c} 1\\2\\3 \end{array}\right)
% \left(\begin{array}[c]{c} 1\\2\\3 \end{array}\right)
% \left(\begin{array}[b]{c} 1\\2\\3 \end{array}\right)
% \end{verbatim}
%
%
% \StopEventually{}
%
% \section{Les commandes}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
%    \begin{macrocode}
\RequirePackage{array}[1994/02/03]
%    \end{macrocode}
%
% \begin{macro}{\@tabarray}
%    Cette commande teste la présence d'un crochet optionnel puis
%    appelle |\@@array| ou |\@@array[c]| (par défaut).
%    \begin{macrocode}
\def\@tabarray{\@ifnextchar[{\@@array}{\@@array[c]}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@array}
%    Cette commande teste la présence d'un délimiteur optionnel avant
%    l'accolade gauche débutant le préambule de la table. S'il n'y a pas de
%    délimiteur, |\@arrayleft| et |\@arrayright| ne sont associés à aucune
%    action et |\@array| est appelé avec l'argument de position (entre 
%    crochets). Sinon, |\@del@array| est appelé.
%    \begin{macrocode}
\def\@@array[#1]{\@ifnextchar\bgroup
  {\let\@arrayleft\relax\let\@arrayright\relax\@array[#1]}%
  {\@del@array[#1]}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@del@array}
%    Nous savons maintenant que nous avons un environnement \texttt{array}
%    (ou \texttt{tabular}) avec des délimiteurs. 
%    \begin{macrocode}
\def\@del@array[#1]#2#3#4{%
%    \end{macrocode}
% La ligne suivante est complètement redondante mais elle permet de capter
% des erreurs associées aux délimiteurs avant que le traitement de 
% l'alignement ne commence. Une erreur courante est ici l'oubli d'un
% \og . \fg dans une construction similaire à l'environnement |\cases|.
% Ceci provoque l'engloutissement de la première unité lexicale, ce qui conduit
% généralement à de nombreux messages d'erreurs infondés masquant 
% la vraie source de l'erreur, le délimiteur manquant, d'autant que 
% |\@arrayright| place l'alignement et les délimiteurs ensemble.
%    \begin{macrocode}
  \setbox\z@\hbox{$\left#2\right#4$}%
%    \end{macrocode}
% Dans le cas de l'argument \og c \fg, nous n'avons pas besoin de remettre 
% en boîte l'alignement, ce qui fait que nous pouvons définir |\@arrayleft| et
% |\@arrayright| juste en y insérant les délimiteurs.
%    \begin{macrocode}
  \if#1c\def\@arrayleft{\left#2}\def\@arrayright{\right#4}%
%    \end{macrocode}
% Sinon, nous avons (sauf erreur) un argument {\tt[t]} ou {\tt[b]} et nous
% stockons alors l'alignement sans les délimiteurs dans |\z0|.
%    \begin{macrocode}
  \else\def\@arrayleft{\setbox\z@}%
%    \end{macrocode}
% Puis une fois que l'alignement est traité, |\@arrayright| est traité.
%    \begin{macrocode}
  \def\@arrayright{%
%    \end{macrocode}
% L'abaissement que doit subir la boîte (cette mesure est négative dans le cas
% de |[b]|) est calculé ici. Il s'agit là d'un peu d'arithmétique, telle que 
% décrite dans le \TeX{}Book, annexe G, règle 8. Nous effectuons le calcul de
% cette manière plutôt qu'en prenant la différence entre la profondeur de la 
% boîte |\z0| et la profondeur de la boîte définie ci-dessous dans la mesure où 
% la profondeur de cette boîte peut être affectée par les délimiteurs si 
% |\delimitershortfall| ou |\delimiterfactor| ont des valeurs non standards.
%    \begin{macrocode}
     \dimen@=\dp\z@
     \advance\dimen@-\ht\z@
     \divide \dimen@ by \tw@
     \advance\dimen@ by\fontdimen22 \textfont\tw@
%    \end{macrocode}
% Maintenant, nous abaissons l'alignement et les délimiteurs à leur place.
%    \begin{macrocode}
     \lower\dimen@\hbox{$\left#2\vcenter{\unvbox\z@}\right#4$}}%
%    \end{macrocode}
% Fin du |\if#1c|
%    \begin{macrocode}
  \fi
%    \end{macrocode}
% Maintenant que nous avons défini |\@arrayleft| et |\@arrayright|, |\@array|
% est appelé.
%    \begin{macrocode}
  \@array[#1]{#3}}
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
%
% \subsection{L'extension \textsf{newarray}}
% Toutes les fonctionnalités de l'ancienne extension \textsf{newarray} ont été
% basculées dans les extensions \textsf{array} ou \textsf{delarray}.
% \changes{v1.00}{1992/07/06}
%    {Fin de la génération de newarray.sty}
%
%
% \Finale
\endinput
