% \iffalse meta-comment
%
% Copyright 1993-2014
%
% The LaTeX3 Project and any individual authors listed elsewhere
% in this file.
%
% This file is part of the Standard LaTeX `Tools Bundle'.
% -------------------------------------------------------
%
% It may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3c
% of this license or (at your option) any later version.
% The latest version of this license is in
%    http://www.latex-project.org/lppl.txt
% and version 1.3c or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% The list of all files belonging to the LaTeX `Tools Bundle' is
% given in the file `manifest.txt'.
%
% \fi
% \iffalse
%% File: dcolumn.dtx Copyright (C) 1992-1996 1999-2001 David Carlisle
%
%<*dtx>
          \ProvidesFile{dcolumn.dtx}
%</dtx>
%<package>\NeedsTeXFormat{LaTeX2e}
%<package>\ProvidesPackage{dcolumn}
%<driver>\ProvidesFile{dcolumn.drv}
% \fi
%         \ProvidesFile{dcolumn.dtx}
          [2014/10/28 v1.06 decimal alignment package (DPC)]
%
% \iffalse
%<*driver>
\documentclass{ltxdoc}
 \usepackage[ltxdoc,inputenc,fontenc,babel]{translatex-fr}
 \usepackage{dcolumn}
 \DeleteShortVerb{\|}
 \GetFileInfo{dcolumn.dtx}
\begin{document}
 \DocInput{dcolumn-fr.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{dcolumn.dtx}
%
% \title{L'extension \textsf{dcolumn}\thanks{Ce fichier a pour numéro de
        version \fileversion\ et a été mis à jour le \filedatefr. La
        première traduction, basée sur la version v1.05, a été publiée par 
        Jean-Pierre Drucbert en 2000.}}
% \author{David Carlisle}
% \date{\filedatefr}
% \author{David Carlisle}
% \MaintainedByLaTeXTeam{tools}
% \maketitle
%
%
% \changes{v1.00}{1992/02/17}{Initial version}
% \changes{v1.01}{1992/06/12}{Re-issue for the new doc and docstrip.}
% \changes{v1.02}{1994/03/14}{Re-issue for LaTeX2e}
% \changes{v1.03}{1996/02/28}{New feature, after tools/2093}
% \changes{v1.05}{1999/07/05}
%      {Minor doc changes latex/3058}
% \changes{v1.06}{2001/05/28}
%      {More doc changes (suggested by BNB, done by CAR) latex/3315}
%
%
%
% \begin{abstract}
% Cette extension définit des colonnes dans un tableau \texttt{array} ou
% \texttt{tabular} avec lesquelles l'alignement se fait sur le séparateur 
% décimal.
% \end{abstract}
%
% \MakeShortVerb{\"}
%
% Cette extension définit un spécificateur de colonne {\tt D} ayant
% trois arguments \\
% "D{"\meta{sep.tex}"}{"\meta{sep.dvi}"}{"\meta{nombre de
% décimales}"}" où :
%
% \begin{itemize}
% \item l'argument \meta{sep.tex} doit être un unique caractère, qui sera
% utilisé comme séparateur dans le fichier \texttt{.tex}. Ce sera en général
% \og \texttt{.} \fg ou \og \texttt{,} \fg ;
% \item l'argument \mbox{\meta{sep.dvi}} est utilisé comme séparateur dans
% la sortie, il peut être identique au premier argument, comme il peut être
% toute expression en mode mathématique, comme "\cdot".
% Notez que \texttt{dcolumn} utilise toujours le mode mathématique pour 
% composer les chiffres et le séparateur.
% \item l'argument \meta{nombre de décimales} est le nombre maximal de 
% chiffres placés après la virgule dans la colonne. Avec un argument à valeur 
% négative, un nombre quelconque de chiffres pourra être utilisé dans la
% colonne, et toutes les entrées seront centrées sur le (\trad{bord gauche du}) 
% séparateur : notez que ceci peut rendre la colonne trop
% large, comme dans le cas pour la première colonne de l'exemple
% ci-dessous. Avec un argument à valeur positive, la colonne utilise des
% commandes équivalentes à "\rightdots" et "\endrightdots" de l'extension
% \textsf{array}, sinon les commandes sont essentiellement équivalentes
% à "\centerdots" et "\endcenterdots".
% \end{itemize}

% Vous pouvez préférer ne pas préciser l'ensemble de ces trois entrées
% dans le préambule de "array" ou "tabular", et vous pouvez ici définir
% vos propres spécificateurs pour le préambule en utilisant "\newcolumntype".
%
% Par exemple, vous pouvez écrire :
%
% \noindent"\newcolumntype{d}[1]{D{.}{\cdot}{#1}}"
%
% Ici, le spécificateur \og "d" \fg prend un seul argument, qui indique le
% nombre de chiffres décimaux. Le fichier ".tex" utilisera un \og \texttt{.}
% \fg, tandis que la sortie utilisera un \og $\cdot$ \fg.
%
% \noindent"\newcolumntype{.}{D{.}{.}{-1}}"
%
% Le spécificateur \og "." \fg indique une colonne d'entrées centrées sur le
% point.
%
% \noindent"\newcolumntype{,}{D{,}{,}{2}}"
%
% Le spécificateur \og "," \fg indique une colonne d'entrée avec au plus deux
% décimales après la virgule \og $,$ \fg.
%
% \newcolumntype{d}[1]{D{.}{\cdot}{#1}}
% \newcolumntype{.}{D{.}{.}{-1}}
% \newcolumntype{,}{D{,}{,}{2}}
%
% Avec cela, une table débutant par % "\begin{tabular}{|d{-1}|d{2}|.|,|}" 
% pourra donner par exemple :
%
% \begin{center}
% \begin{tabular}{|d{-1}|d{2}|.|,|}
% 1.2   & 1.2   &1.2    &1,2    \\
% 1.23  & 1.23  &12.5   &300,2  \\
% 1121.2& 1121.2&861.20 &674,29 \\
% 184   & 184   &10     &69     \\
% .4    & .4    &       &,4     \\
%       &       &.4     &
% \end{tabular}
% \end{center}
%
% Notez que la première colonne, qui a un \meta{nombre de décimales} négatif
% (premier argument du spécificateur "d"), est plus large que la seconde
% colonne. Le point décimal apparaît au milieu de la colonne.
% Notez aussi que les entrées sans point décimal, sans partie décimale ou
% sans partie entièren tout comme les entrées vides sont correctement
% traitées.
%
%% Si vous avez des cellules avec entêtes (saisies avec 
% "\multicolumn{1}{c}{..}" pour remplacer le type de colonne "D"), alors il
% se peut qu'aucune des deux formes \og centrées \fg et \og alignées à 
% droite \fg ne soit satisfaisante.
% \begin{center}\small
% \begin{tabular}[t]{|D..{-1}|D..{1}|D..{5.1}|}
%\multicolumn{1}{|c|}{entête}&
%\multicolumn{1}{c|}{entête}&
%\multicolumn{1}{c|}{entête}\\[3pt]
% 1.2  & 1.2  &1.2 \\
% 11212.2& 11212.2&11212.2  \\
% .4    & .4    &.4
% \end{tabular}
% \hfill
% \begin{tabular}[t]{|D..{-1}|D..{1}|D..{1.1}|}
%\multicolumn{1}{|c|}{entête large}&
%\multicolumn{1}{c|}{entête large}&
%\multicolumn{1}{c|}{entête large}\\[3pt]
% 1.2  & 1.2  &1.2 \\
% .4    & .4    &.4
% \end{tabular}
% \end{center}
%
% Dans chacune de ces deux tables, la première colonne est définie par 
% "D{.}{.}{-1}" pour afficher une colonne centrée sur le \og "." \fg ; 
% la deuxième colonne est définie par "D{.}{.}{1}" pour afficher une
% colonne alignée à droite.
%
% La colonne centrée produit une colonne qui plus large que nécessaire pour
% s'assurer que le point décimal est centré dans tous les cas. La deuxième
% colonne, qui est alignée à droite, n'a pas cet inconvénient mais, sous un
% entête large, l'apparence visuelle est assez peu satisfaisante lorsqu'il
% y a peu de chiffres dans les colonnes.
%
% Dans la version v1.03, une troisième alternative a été introduite.
% Le troisième argument, le \meta{nombre de décimales}, peut définir
% \emph{à la fois} le nombre de chiffres à gauche et à droite de la virgule.
% La troisième colonne ainsi est définie par "D{.}{.}{5.1}" dans la table de 
% gauche ci-dessus et par "D{.}{.}{1.1}" dans la table de droite, pour 
% indiquer respectivement \og cinq chiffres à gauche et un à droite \fg 
% et \og un chiffre à gauche et un chiffre à droite \fg (le \og . \fg, lui, 
% peut être remplacé par \og , \fg ou toute autre unité lexicale). Les 
% colonnes de chiffres sont alors positionnées de telle sorte qu'un nombre
% avec le format indiqué soit centré dans la colonne.
%
% Cette notation permet également de centrer les colonnes sur le milieu 
% du séparateur plutôt que sur son bord gauche ; par exemple, 
% "D{+}{\,\pm\,}{3,3}" donnera une belle mise en forme symétrique pour des
% nombres comportant jusqu'à trois chiffres de chaque côté d'un signe $\pm$.
%
% \StopEventually{}
%
%
% \section{Les commandes}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% Tout d'abord, nous chargeons l'extension \textsf{array} si ce n'est pas déjà
% le cas.
%    \begin{macrocode}
\RequirePackage{array}
%    \end{macrocode}
%
% \tradini
% The basic ideas behind these macros are explained in the documentation
% for {\tt array.sty}. However they use three
% tricks which may be useful in other contexts.
% \begin{itemize}
% \item The separator is surrounded in extra "{ }", so that it is set
% with "\mathord" spacing, otherwise, for instance a `,' would have
% extra space after it.
% \item The separator is not given its special definition by making it
% active, as this would not work for an entry such as "& .5 &", as the
% first token of an alignment entry is read {\em before\/} the preamble
% part, in case it is an "\omit", in which case the preamble is to be
% omitted. Instead we switch the mathcode to (hex) 8000, which makes the
% token act as if it were active.
% \item Although \verb|\mathcode`.="8000|  makes {\tt.} act as if it
% were active, it is still not allowed in constructions such as
% "\def.{}", even in math-mode, so we have to construct an active
% version of the separator, this is done by making it the uppercase of
% "~", and then using the construct\\
% "\uppercase{\def~}{"\meta{definition}"}".\\
% Note that the \meta{definition} is not uppercased, so the definition
% can refer to the standard, non-active use of the separator.
% \end{itemize}
%
% \begin{macro}{\DC@}
% \changes{v1.03}{1996/02/28}{New feature, after tools/2093}
% Set up uppercase tables as required, and then grab the first part of
% the numerical argument into "\count@".
%    \begin{macrocode}
\def\DC@#1#2#3{%
  \uccode`\~=`#1\relax
  \m@th
  \afterassignment\DC@x\count@#3\relax{#1}{#2}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\DC@x}
% \changes{v1.03}{1996/02/28}{Macro added}
% If "\count@" is negative, centre on the decimal point. If it is
% positive either "#1" will be empty in which case bad out decimal
% part to the number of digits specified by "\count@" or (new feature
% in v1.03) it is none empty in which case "\count@" contains the
% number of digits to the left of the point, and "#1" contains a junk
% token (probably ".") followed by the number of digits to the right
% of the point. In either of these latter cases, "\DC@right" is used.
%    \begin{macrocode}
\def\DC@x#1\relax#2#3{%
  \ifnum\z@>\count@
    \expandafter\DC@centre
  \else
    \expandafter\DC@right
  \fi
  {#2}{#3}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\DC@centre}
% If centering on the decimal point, just need to box up the two halves.
%    \begin{macrocode}
\def\DC@centre#1#2#3{%
  \let\DC@end\DC@endcentre
  \uppercase{\def~}{$\egroup\setbox\tw@=\hbox\bgroup${#2}}%
  \setbox\tw@=\hbox{${\phantom{{#2}}}$}%
  \setbox\z@=\hbox\bgroup$\mathcode`#1="8000 }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\DC@endcentre}
% and then pad out the smaller of the two boxes so there is the same
% amount of stuff either side of the point.
%    \begin{macrocode}
\def\DC@endcentre{$\egroup
    \ifdim \wd\z@>\wd\tw@
      \setbox\tw@=\hbox to\wd\z@{\unhbox\tw@\hfill}%
    \else
      \setbox\z@=\hbox to\wd\tw@{\hfill\unhbox\z@}\fi
    \box\z@\box\tw@}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\DC@right}
% \changes{v1.03}{1996/02/28}{Re-implemented, after tools/2093}
% This deals with both the cases where a specified number of decimal
% places is given.
%    \begin{macrocode}
\def\DC@right#1#2#3{%
  \ifx\relax#3\relax
%    \end{macrocode}
% If "#3" is empty, add "\hfill" to right align the column, and
% Just set "\DC@rl" to begin a group, so nothing fancy is done with
% the whole number part.
%    \begin{macrocode}
    \hfill
    \let\DC@rl\bgroup
  \else
%    \end{macrocode}
% Otherwise  set "\DC@rl" so that the whole number part is put in a
% box "\count@" times as wide as a digit.
% In order to share code with the other branch, then move "#3" (the
% number of decimal places) into "\count@" throwing away the `.' from
% the user syntax.
% \changes{v1.04}{1996/09/23}{Add \cs{hfill} so integer part
%               is still flush right if no decimal point used.}
%    \begin{macrocode}
    \edef\DC@rl{to\the\count@\dimen@ii\bgroup\hss\hfill}%
    \count@\@gobble#3\relax
  \fi
%    \end{macrocode}
%
%    \begin{macrocode}
  \let\DC@end\DC@endright
%    \end{macrocode}
% Box 2 contains the decimal part, set to "\dimen@" which is
% calculated below to be "\count@" times the width of a digit, plus
% the with of the `decimal point'.
%    \begin{macrocode}
  \uppercase{\def~}{$\egroup\setbox\tw@\hbox to\dimen@\bgroup${#2}}%
   \setbox\z@\hbox{$1$}\dimen@ii\wd\z@
   \dimen@\count@\dimen@ii
   \setbox\z@\hbox{${#2}$}\advance\dimen@\wd\z@
   \setbox\tw@\hbox to\dimen@{}%
%    \end{macrocode}
% Box 0 contains the whole number part, either just at its natural
% size for right aligned columns, or set to (the old value of)
% "\count@" times the width of a digit. "\DC@rl" defined above
% determines the two cases.
%    \begin{macrocode}
   \setbox\z@\hbox\DC@rl$\mathcode`#1="8000 }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\DC@endright}
% \changes{v1.03}{1996/02/28}{Re-implemented, after tools/2093}
% Just finish off the second box, and then put out both boxes.
%    \begin{macrocode}
\def\DC@endright{$\hfil\egroup\box\z@\box\tw@}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{D}
% The user interface, define the {\tt D} column to take three arguments.
% For special purposes, you may need to directly access "\DC@" rather
% than the "D" column, eg to get a bold version you could use
%\begin{verbatim}
% \newcolumntype{E}[3]{>{\boldmath\DC@{#1}{#2}{#3}}c<{\DC@end}}
%\end{verbatim}
%    \begin{macrocode}
\newcolumntype{D}[3]{>{\DC@{#1}{#2}{#3}}c<{\DC@end}}
%</package>
%    \end{macrocode}
% \end{macro}
%
%
% \Finale
\endinput
