% \iffalse
%% Source File: ifpdf.dtx
%% Copyright 2016 Heiko Oberdiek and LaTeX3 project
%%
%% This file may be distributed under the terms of the LPPL.
%% See README for details.
%
%<*dtx>
          \ProvidesFile{ifpdf.dtx}
%</dtx>
%<package>\ifx\ProvidesPackage\undefined
%<package>\def\next#1#2[#3]{\wlog{#2 #3}\expandafter\gdef
%<package>\csname ver@ifpdf.sty\endcsname{#3}}
%<package>\expandafter\next\fi
%<package>\ProvidesPackage{ifpdf}
%<driver> \ProvidesFile{ifpdf.drv}
% \fi
%         \ProvidesFile{ifpdf.dtx}
[2016/05/14 v3.1 Provides the ifpdf switch]
%
% \iffalse
%<*driver>
\documentclass{ltxdoc}
\usepackage[ltxdoc,inputenc,fontenc,babel]{translatex-fr}
\usepackage{hyperref}
\GetFileInfo{ifpdf.dtx}
\begin{document}
\DocInput{ifpdf-fr.dtx}
\end{document}
%</driver>
% \fi
%
%
% \title{L'extension \textsf{ifpdf}\thanks{Ce fichier a pour numéro de
%        version \fileversion\ et a été mis à jour le \filedatefr. Son 
%        titre original est \og \emph{The \textsf{ifpdf} package} \fg.
%        Merci de soumettre les anomalies rencontrées à l'adresse 
%        https://github.com/ho-tex/oberdiek/issues.}}
% \author{LaTeX3 project}
% \date{\filedatefr}
% \maketitle
% \tableofcontents
%
% \section{Introduction}
% 
% Cette extension est une nouvelle implémentation de l'extension \textsf{ifpdf}
% de Heiko Oberdiek, intégrant une structure simplifiée et une mise à jour pour
% fonctionner avec la version actuelle de Lua\TeX.
%
% L'extension définit un nouveau booléen, \verb|\ifpdf|, qui est vrai pour
% pdf\TeX\ et pour Lua\TeX\ en mode PDF et qui est faux sinon.
%
% \section{Implémentation}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% Si \verb|\ifpdf| n'a pas été définie, elle l'est alors, en faisant attention
% à ce qu'elle soit externe en plain \TeX\footnote{N.D.T. : la traduction
% pourrait être fausse, le texte original étant \og \emph{taking care that it
% is outer in plain \TeX} \fg.}
%    \begin{macrocode}
\expandafter\ifx\csname ifpdf\endcsname\relax
 \csname newif\expandafter\endcsname\csname ifpdf\endcsname
\else
%    \end{macrocode}
% Si \verb|\ifpdf| est déjà défini mais que \verb|\pdftrue| n'est pas défini,
% le traitement cesse.
%    \begin{macrocode}
 \ifx\pdftrue\undefined
  \ifx\PackageError\undefined
  \begingroup\def\PackageError#1#2#3{\endgroup\errmessage{#2}}
  \fi
  \PackageError{ifpdf}{incompatible ifpdf definition}{}
  \expandafter\expandafter\expandafter
 \fi
\fi
%    \end{macrocode}
% Sinon, le booléen vaut faux à moins que \verb|\pdfoutput|(\verb|\outputmode|)
% ne soit plus grand que zéro. 
% Pour Lua\TeX, le test est fait en Lua dans la mesure où les primitives de 
% \TeX{} peuvent ne pas être activées et que le nom de la primitive peut
% être \verb|\pdfoutput| ou \verb|\outputmode| selon le numéro de version de
% Lua\TeX.
%    \begin{macrocode}
\let\ifpdf\iffalse
%    \end{macrocode}
% 
%    \begin{macrocode}
\ifx\directlua\undefined
%    \end{macrocode}
% Sans Lua\TeX.
%    \begin{macrocode}
\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname pdfoutput\endcsname\relax
\else
  \ifnum\pdfoutput>0 %
    \pdftrue
  \fi
\fi
\else
%    \end{macrocode}
% Avec Lua\TeX.
%    \begin{macrocode}
\directlua{%
if (tex.outputmode or tex.pdfoutput or 0) > 0 then
  tex.print('\string\\pdftrue')
end
}
\fi
%    \end{macrocode}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \endinput
% 2016/04/04 v3.0  rewrite to be self standing and work with new luatex/
% 2016/05/14 v3.1  define ver@ifpdf.sty in plain tex.
